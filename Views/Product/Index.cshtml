@model IEnumerable<Product>

@using Microsoft.AspNetCore.Identity

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "Quản lý sản phẩm";
    var categories = ViewData["Categories"] as Category[];
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h1>@ViewData["Title"]</h1>
    @if (User.IsInRole(RoleUser.Admin)){
        <a asp-area="" asp-controller="Product" asp-action="Create" class="btn btn-success">
            <i class="fa-solid fa-plus"></i> Thêm sản phẩm mới
        </a>
    }
</div>

<div class="card mb-4">
    <div class="card-header bg-light">
        <h5 class="mb-0"><i class="fas fa-filter me-2"></i>Bộ lọc sản phẩm</h5>
    </div>
    <div class="card-body">
        <form asp-controller="Product" asp-area="" asp-action="Filter" method="get" id="filterForm">
            <div class="row g-3">
                <div class="col-md-4">
                    <div class="form-floating">
                        <input class="form-control" type="text" id="name" name="name" placeholder="Tìm kiếm sản phẩm" />
                        <label for="name">Tìm kiếm sản phẩm</label>
                    </div>
                </div>

                @if (categories != null)
                {
                    <div class="col-md-3">
                        <div class="form-floating">
                            <select class="form-select" id="categoryId" name="categoryId">
                                <option value="">Tất cả danh mục</option>
                                @foreach (var category in categories)
                                {
                                    <option value="@category.Id">@category.Name</option>
                                }
                            </select>
                            <label for="categoryId">Danh mục</label>
                        </div>
                    </div>
                }

                <div class="col-md-2">
                    <div class="form-floating">
                        <input class="form-control" type="number" id="minPrice" name="minPrice" placeholder="Giá từ" />
                        <label for="minPrice">Giá từ</label>
                    </div>
                </div>

                <div class="col-md-2">
                    <div class="form-floating">
                        <input class="form-control" type="number" id="maxPrice" name="maxPrice" placeholder="Đến" />
                        <label for="maxPrice">Giá đến</label>
                    </div>
                </div>

                <div class="col-md-1 d-flex align-items-center">
                    <div class="form-check form-switch">
                        <input class="form-check-input" type="checkbox" name="isDiscount" value="true" id="isDiscount">
                        <label class="form-check-label" for="isDiscount">Giảm giá</label>
                    </div>
                </div>
            </div>

            <div class="d-flex justify-content-end mt-3">
                <a asp-area="" asp-controller="Product" asp-action="Index" class="btn btn-outline-secondary me-2">
                    <i class="fas fa-redo-alt me-1"></i> Đặt lại
                </a>
                <button type="submit" class="btn btn-primary">
                    <i class="fas fa-search me-1"></i> Tìm kiếm
                </button>
            </div>
        </form>
    </div>
</div>

<div class="d-flex justify-content-between align-items-center mb-3">
    <h5 class="mb-0"><i class="fas fa-list me-2"></i>Danh sách sản phẩm (@Model.Count())</h5>
    <div class="btn-group" role="group">
        <input type="radio" class="btn-check" name="viewMode" id="table-view" autocomplete="off" checked>
        <label class="btn btn-outline-primary" for="table-view">
            <i class="fas fa-table me-1"></i> Bảng
        </label>
        <input type="radio" class="btn-check" name="viewMode" id="grid-view" autocomplete="off">
        <label class="btn btn-outline-primary" for="grid-view">
            <i class="fas fa-th-large me-1"></i> Lưới
        </label>
    </div>
</div>

<div class="card mb-4" id="table-view-container">
    <div class="card-header bg-light d-flex justify-content-between align-items-center">
        <h5 class="mb-0"><i class="fas fa-table me-2"></i>Chế độ bảng</h5>
        <span class="badge bg-primary">Tổng: @Model.Count() sản phẩm</span>
    </div>
    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-striped table-hover align-middle">
                <thead class="table-dark">
                    <tr>
                        <th scope="col" style="width: 60px">ID</th>
                        <th scope="col" style="width: 100px">Hình ảnh</th>
                        <th scope="col">Tên sản phẩm</th>
                        <th scope="col">Danh mục</th>
                        <th scope="col">Giá bán</th>
                        <th scope="col">Giá gốc</th>
                        <th scope="col">Giảm giá</th>
                        <th scope="col" style="width: 150px">Thao tác</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>@item.Id</td>
                            <td>
                                <img src="@item.ImageUrl" alt="@item.Name" class="img-thumbnail" style="width: 80px; height: 80px; object-fit: cover;">
                            </td>
                            <td>
                                <h6 class="mb-0">@item.Name</h6>
                                <small class="text-muted">@(item.Description?.Length > 50 ? item.Description.Substring(0, 50) + "..." : item.Description)</small>
                            </td>
                            <td>@(item.Category?.Name ?? "Không có")</td>
                            <td class="fw-bold text-primary">@item.Price.ToString("N0")đ</td>
                            <td class="text-muted">@item.OriginialPrice.ToString("N0")đ</td>
                            <td>
                                @if (item.Discount > 0)
                                {
                                    <span class="badge bg-danger">-@item.Discount%</span>
                                }
                                else
                                {
                                    <span class="text-muted">Không</span>
                                }
                            </td>
                            <td>
                                <div class="btn-group" role="group">
                                    <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-info" data-bs-toggle="tooltip" title="Xem chi tiết">
                                        <i class="fas fa-eye"></i>
                                    </a>
                                    @if (User.IsInRole(RoleUser.Admin))
                                    {
                                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-warning" data-bs-toggle="tooltip" title="Chỉnh sửa">
                                            <i class="fas fa-edit"></i>
                                        </a>
                                        <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-danger" data-bs-toggle="tooltip" title="Xóa">
                                            <i class="fas fa-trash"></i>
                                        </a>
                                    }
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<div class="card mb-4" id="grid-view-container" style="display: none;">
    <div class="card-header bg-light d-flex justify-content-between align-items-center">
        <h5 class="mb-0"><i class="fas fa-th-large me-2"></i>Chế độ lưới</h5>
        <span class="badge bg-primary">Tổng: @Model.Count() sản phẩm</span>
    </div>
    <div class="card-body">
        <div class="row row-cols-1 row-cols-md-2 row-cols-lg-4 g-4">
            @foreach (var item in Model)
            {
                <div class="col">
                    <div class="card h-100 product-card shadow-sm">
                        <div class="position-relative">
                            <img src="@item.ImageUrl" class="card-img-top product-img" alt="@item.Name" style="height: 200px; object-fit: cover;">
                            <div class="product-overlay">
                                <div class="d-flex justify-content-center">
                                    <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-light rounded-circle mx-1" data-bs-toggle="tooltip" title="Xem chi tiết">
                                        <i class="fas fa-eye"></i>
                                    </a>
                                    @if (User.IsInRole(RoleUser.Admin))
                                    {
                                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-light rounded-circle mx-1" data-bs-toggle="tooltip" title="Chỉnh sửa">
                                            <i class="fas fa-edit"></i>
                                        </a>
                                        <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-light rounded-circle mx-1" data-bs-toggle="tooltip" title="Xóa">
                                            <i class="fas fa-trash"></i>
                                        </a>
                                    }
                                </div>
                            </div>
                            @if (item.Discount > 0)
                            {
                                <div class="position-absolute top-0 end-0 bg-danger text-white px-2 py-1 m-2 rounded-pill">-@item.Discount%</div>
                            }
                        </div>
                        <div class="card-body">
                            <div class="d-flex justify-content-between align-items-center mb-2">
                                <span class="badge bg-info">@(item.Category?.Name ?? "Không có")</span>
                                <div class="small">
                                    <i class="fas fa-star text-warning"></i>
                                    <span>4.5 (20)</span>
                                </div>
                            </div>
                            <h5 class="card-title">@item.Name</h5>
                            <p class="card-text text-muted small">@(item.Description?.Length > 60 ? item.Description.Substring(0, 60) + "..." : item.Description)</p>
                            <div class="d-flex justify-content-between align-items-center mt-3">
                                <div>
                                    <span class="fw-bold fs-5">@item.Price.ToString("N0")đ</span>
                                    @if (item.OriginialPrice > item.Price)
                                    {
                                        <span class="text-decoration-line-through text-muted ms-2">@item.OriginialPrice.ToString("N0")đ</span>
                                    }
                                </div>
                            </div>
                            <div class="d-flex mt-3">
                                <button class="btn btn-outline-success flex-grow-1" onclick="addToCart(@item.Id); return false;">
                                    <i class="fas fa-cart-plus me-1"></i> Thêm vào giỏ
                                </button>
                                <a href="#" class="btn btn-primary ms-2">
                                    Mua ngay
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>
<style>
    /* Product Grid Styles */
    .product-card {
        transition: transform 0.3s, box-shadow 0.3s;
        overflow: hidden;
    }

    .product-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 10px 20px rgba(0,0,0,0.1) !important;
    }

    .product-img {
        transition: transform 0.5s;
    }

    .product-card:hover .product-img {
        transform: scale(1.05);
    }

    .product-overlay {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0,0,0,0.3);
        display: flex;
        align-items: center;
        justify-content: center;
        opacity: 0;
        transition: opacity 0.3s;
    }

    .product-card:hover .product-overlay {
        opacity: 1;
    }

    .product-title {
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    .product-desc {
        height: 40px;
        overflow: hidden;
    }

    .product-price {
        font-weight: bold;
        color: #dc3545;
    }

    .product-original-price {
        text-decoration: line-through;
        color: #6c757d;
        font-size: 0.9rem;
        margin-left: 5px;
    }

    /* Legacy styles for old grid view */
    .custom-col {
        padding-top: calc(var(--bs-gutter-x)* .5);
        padding-bottom: calc(var(--bs-gutter-x)* .5);
    }

    .vote-star i {
        font-size: 14px;
    }

    .card>img {
        height: 160px;
    }

    .tools i {
        padding: 8px;
        color: white;
    }

    .tools i:hover {
        background: rgb(73, 73, 73);
    }

    .card:hover .tools {
        display: flex;
    }

    .tools {
        display: none;
        gap: 6px;
        flex-direction: column;
        position: absolute;
        right: 10px;
        top: 10px;
    }
</style>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Toggle view mode
            $('#table-view').change(function() {
                if($(this).is(':checked')) {
                    $('#table-view-container').show();
                    $('#grid-view-container').hide();
                    localStorage.setItem('productViewMode', 'table');
                }
            });

            $('#grid-view').change(function() {
                if($(this).is(':checked')) {
                    $('#grid-view-container').show();
                    $('#table-view-container').hide();
                    localStorage.setItem('productViewMode', 'grid');
                }
            });

            // Load saved view mode preference
            const savedViewMode = localStorage.getItem('productViewMode');
            if (savedViewMode === 'grid') {
                $('#grid-view').prop('checked', true).trigger('change');
            } else {
                $('#table-view').prop('checked', true).trigger('change');
            }

            // Initialize tooltips
            const tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl);
            });
        });
    </script>
}
